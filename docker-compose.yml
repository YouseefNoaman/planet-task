version: '3.9'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: planet-app-backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/planet-task
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: P4ssword!
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    networks:
      - app_network

  db:
    image: postgres
    container_name: planet-task-postgres_db
    restart: always
    environment:
      POSTGRES_DB: planet-task
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P4ssword!
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planet-task"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app_network

  redis:
    image: redis
    container_name: planet-task-redis_cache
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      timeout: 3s
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: